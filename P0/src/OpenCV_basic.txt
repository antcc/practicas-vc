Trozos de código Python que ilustran el uso de OpenCV
======================================================
# lectura, muestra y escritura de una imagen
=============================================

import numpy as np
import cv2

# Load an color image in grayscale
img = cv2.imread('messi.jpg',0)

# Display an image

cv2.namedWindow('image', cv2.WINDOW_NORMAL)
cv2.imshow('image',img)
cv2.waitKey(0)
cv2.destroyAllWindows()

# Write an image

cv2.imwrite('messigray.png',img)

-------------------------------------------------------------------
# Uso de teclas para gestionar la ejecución del programa
========================================================

import numpy as np
import cv2

img = cv2.imread('messi5.jpg',0)
cv2.imshow('image',img)
k = cv2.waitKey(0)
if k == 27:         # wait for ESC key to exit
    cv2.destroyAllWindows()
elif k == ord('s'): # wait for 's' key to save and exit
    cv2.imwrite('messigray.png',img)
    cv2.destroyAllWindows()

------------------------------------------------------------------

Matplotlib  ( Biblioteca de gráficos)
=====================================

import numpy as np
import cv2
from matplotlib import pyplot as plt

img = cv2.imread('messi5.jpg',0)
plt.imshow(img, cmap = 'gray', interpolation = 'bicubic')
plt.xticks([]), plt.yticks([])  # to hide tick values on X and Y axis
plt.show()

---------------------------------------------------------------------

Dibujo sobre imágenes
=====================

import numpy as np
import cv2

# Creamos una imagen negra
img = np.zeros((512,512,3), np.uint8)

# linea diagonal azul con grosor de 5 px
img = cv2.line(img,(0,0),(511,511),(255,0,0),5)

# un rectangulo
img = cv2.rectangle(img,(384,0),(510,128),(0,255,0),3)

#una elipse
img = cv2.ellipse(img,(256,256),(100,50),0,0,180,255,-1)

#un polígono
pts = np.array([[10,5],[20,30],[70,20],[50,10]], np.int32)
pts = pts.reshape((-1,1,2))
img = cv2.polylines(img,[pts],True,(0,255,255))

#añadir texto a la imagen
font = cv2.FONT_HERSHEY_SIMPLEX
cv2.putText(img,'OpenCV',(10,500), font, 4,(255,255,255),2,cv2.LINE_AA)

-------------------------------------------------------------------------------

Mirar en la documentación sobre OpenCV

https://opencv-python-tutroals.readthedocs.io/en/latest/py_tutorials/py_core/py_basic_ops/py_basic_ops.html

El acceso y modificación de los valores de los píxeles
El acceso y modificación de Regiones de Interes
El uso de los ATRIBUTOS para el tipo de Borde
El uso de subplot para el dibujo simultaneo de varias imágenes en una misma ventana
